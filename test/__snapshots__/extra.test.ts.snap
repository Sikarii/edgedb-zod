// Vitest Snapshot v1

exports[`extra::CreateMyType > has the expected shape 1`] = `
{
  "createdAt": ZodOptional {
    "_def": {
      "innerType": ZodString {
        "_def": {
          "checks": [
            {
              "kind": "regex",
              "regex": /\\^\\\\d\\{4\\}-\\\\d\\{2\\}-\\\\d\\{2\\}\\(T\\\\d\\{2\\}:\\\\d\\{2\\}:\\\\d\\{2\\}\\(\\\\\\.\\\\d\\{3\\}\\)\\?\\)\\?Z\\?\\$/,
            },
          ],
          "typeName": "ZodString",
        },
        "_regex": [Function],
        "and": [Function],
        "array": [Function],
        "default": [Function],
        "describe": [Function],
        "isNullable": [Function],
        "isOptional": [Function],
        "nonempty": [Function],
        "nullable": [Function],
        "nullish": [Function],
        "optional": [Function],
        "or": [Function],
        "parse": [Function],
        "parseAsync": [Function],
        "promise": [Function],
        "refine": [Function],
        "refinement": [Function],
        "safeParse": [Function],
        "safeParseAsync": [Function],
        "spa": [Function],
        "superRefine": [Function],
        "transform": [Function],
        "trim": [Function],
      },
      "typeName": "ZodOptional",
    },
    "and": [Function],
    "array": [Function],
    "default": [Function],
    "describe": [Function],
    "isNullable": [Function],
    "isOptional": [Function],
    "nullable": [Function],
    "nullish": [Function],
    "optional": [Function],
    "or": [Function],
    "parse": [Function],
    "parseAsync": [Function],
    "promise": [Function],
    "refine": [Function],
    "refinement": [Function],
    "safeParse": [Function],
    "safeParseAsync": [Function],
    "spa": [Function],
    "superRefine": [Function],
    "transform": [Function],
  },
  "enumTest": ZodOptional {
    "_def": {
      "innerType": ZodEnum {
        "_def": {
          "typeName": "ZodEnum",
          "values": [
            "1",
            "2",
            "3",
            "4",
            "5",
          ],
        },
        "and": [Function],
        "array": [Function],
        "default": [Function],
        "describe": [Function],
        "isNullable": [Function],
        "isOptional": [Function],
        "nullable": [Function],
        "nullish": [Function],
        "optional": [Function],
        "or": [Function],
        "parse": [Function],
        "parseAsync": [Function],
        "promise": [Function],
        "refine": [Function],
        "refinement": [Function],
        "safeParse": [Function],
        "safeParseAsync": [Function],
        "spa": [Function],
        "superRefine": [Function],
        "transform": [Function],
      },
      "typeName": "ZodOptional",
    },
    "and": [Function],
    "array": [Function],
    "default": [Function],
    "describe": [Function],
    "isNullable": [Function],
    "isOptional": [Function],
    "nullable": [Function],
    "nullish": [Function],
    "optional": [Function],
    "or": [Function],
    "parse": [Function],
    "parseAsync": [Function],
    "promise": [Function],
    "refine": [Function],
    "refinement": [Function],
    "safeParse": [Function],
    "safeParseAsync": [Function],
    "spa": [Function],
    "superRefine": [Function],
    "transform": [Function],
  },
  "jsonData": ZodOptional {
    "_def": {
      "innerType": ZodUnknown {
        "_def": {
          "typeName": "ZodUnknown",
        },
        "_unknown": true,
        "and": [Function],
        "array": [Function],
        "default": [Function],
        "describe": [Function],
        "isNullable": [Function],
        "isOptional": [Function],
        "nullable": [Function],
        "nullish": [Function],
        "optional": [Function],
        "or": [Function],
        "parse": [Function],
        "parseAsync": [Function],
        "promise": [Function],
        "refine": [Function],
        "refinement": [Function],
        "safeParse": [Function],
        "safeParseAsync": [Function],
        "spa": [Function],
        "superRefine": [Function],
        "transform": [Function],
      },
      "typeName": "ZodOptional",
    },
    "and": [Function],
    "array": [Function],
    "default": [Function],
    "describe": [Function],
    "isNullable": [Function],
    "isOptional": [Function],
    "nullable": [Function],
    "nullish": [Function],
    "optional": [Function],
    "or": [Function],
    "parse": [Function],
    "parseAsync": [Function],
    "promise": [Function],
    "refine": [Function],
    "refinement": [Function],
    "safeParse": [Function],
    "safeParseAsync": [Function],
    "spa": [Function],
    "superRefine": [Function],
    "transform": [Function],
  },
  "updatedAt": ZodOptional {
    "_def": {
      "innerType": ZodString {
        "_def": {
          "checks": [
            {
              "kind": "regex",
              "regex": /\\^\\\\d\\{4\\}-\\\\d\\{2\\}-\\\\d\\{2\\}\\(T\\\\d\\{2\\}:\\\\d\\{2\\}:\\\\d\\{2\\}\\(\\\\\\.\\\\d\\{3\\}\\)\\?\\)\\?Z\\?\\$/,
            },
          ],
          "typeName": "ZodString",
        },
        "_regex": [Function],
        "and": [Function],
        "array": [Function],
        "default": [Function],
        "describe": [Function],
        "isNullable": [Function],
        "isOptional": [Function],
        "nonempty": [Function],
        "nullable": [Function],
        "nullish": [Function],
        "optional": [Function],
        "or": [Function],
        "parse": [Function],
        "parseAsync": [Function],
        "promise": [Function],
        "refine": [Function],
        "refinement": [Function],
        "safeParse": [Function],
        "safeParseAsync": [Function],
        "spa": [Function],
        "superRefine": [Function],
        "transform": [Function],
        "trim": [Function],
      },
      "typeName": "ZodOptional",
    },
    "and": [Function],
    "array": [Function],
    "default": [Function],
    "describe": [Function],
    "isNullable": [Function],
    "isOptional": [Function],
    "nullable": [Function],
    "nullish": [Function],
    "optional": [Function],
    "or": [Function],
    "parse": [Function],
    "parseAsync": [Function],
    "promise": [Function],
    "refine": [Function],
    "refinement": [Function],
    "safeParse": [Function],
    "safeParseAsync": [Function],
    "spa": [Function],
    "superRefine": [Function],
    "transform": [Function],
  },
}
`;

exports[`extra::MyEnum > has the expected values 1`] = `
[
  "1",
  "2",
  "3",
  "4",
  "5",
]
`;

exports[`extra::UpdateMyType > has the expected shape 1`] = `
{
  "enumTest": ZodOptional {
    "_def": {
      "innerType": ZodEnum {
        "_def": {
          "typeName": "ZodEnum",
          "values": [
            "1",
            "2",
            "3",
            "4",
            "5",
          ],
        },
        "and": [Function],
        "array": [Function],
        "default": [Function],
        "describe": [Function],
        "isNullable": [Function],
        "isOptional": [Function],
        "nullable": [Function],
        "nullish": [Function],
        "optional": [Function],
        "or": [Function],
        "parse": [Function],
        "parseAsync": [Function],
        "promise": [Function],
        "refine": [Function],
        "refinement": [Function],
        "safeParse": [Function],
        "safeParseAsync": [Function],
        "spa": [Function],
        "superRefine": [Function],
        "transform": [Function],
      },
      "typeName": "ZodOptional",
    },
    "and": [Function],
    "array": [Function],
    "default": [Function],
    "describe": [Function],
    "isNullable": [Function],
    "isOptional": [Function],
    "nullable": [Function],
    "nullish": [Function],
    "optional": [Function],
    "or": [Function],
    "parse": [Function],
    "parseAsync": [Function],
    "promise": [Function],
    "refine": [Function],
    "refinement": [Function],
    "safeParse": [Function],
    "safeParseAsync": [Function],
    "spa": [Function],
    "superRefine": [Function],
    "transform": [Function],
  },
  "jsonData": ZodOptional {
    "_def": {
      "innerType": ZodUnknown {
        "_def": {
          "typeName": "ZodUnknown",
        },
        "_unknown": true,
        "and": [Function],
        "array": [Function],
        "default": [Function],
        "describe": [Function],
        "isNullable": [Function],
        "isOptional": [Function],
        "nullable": [Function],
        "nullish": [Function],
        "optional": [Function],
        "or": [Function],
        "parse": [Function],
        "parseAsync": [Function],
        "promise": [Function],
        "refine": [Function],
        "refinement": [Function],
        "safeParse": [Function],
        "safeParseAsync": [Function],
        "spa": [Function],
        "superRefine": [Function],
        "transform": [Function],
      },
      "typeName": "ZodOptional",
    },
    "and": [Function],
    "array": [Function],
    "default": [Function],
    "describe": [Function],
    "isNullable": [Function],
    "isOptional": [Function],
    "nullable": [Function],
    "nullish": [Function],
    "optional": [Function],
    "or": [Function],
    "parse": [Function],
    "parseAsync": [Function],
    "promise": [Function],
    "refine": [Function],
    "refinement": [Function],
    "safeParse": [Function],
    "safeParseAsync": [Function],
    "spa": [Function],
    "superRefine": [Function],
    "transform": [Function],
  },
  "updatedAt": ZodOptional {
    "_def": {
      "innerType": ZodString {
        "_def": {
          "checks": [
            {
              "kind": "regex",
              "regex": /\\^\\\\d\\{4\\}-\\\\d\\{2\\}-\\\\d\\{2\\}\\(T\\\\d\\{2\\}:\\\\d\\{2\\}:\\\\d\\{2\\}\\(\\\\\\.\\\\d\\{3\\}\\)\\?\\)\\?Z\\?\\$/,
            },
          ],
          "typeName": "ZodString",
        },
        "_regex": [Function],
        "and": [Function],
        "array": [Function],
        "default": [Function],
        "describe": [Function],
        "isNullable": [Function],
        "isOptional": [Function],
        "nonempty": [Function],
        "nullable": [Function],
        "nullish": [Function],
        "optional": [Function],
        "or": [Function],
        "parse": [Function],
        "parseAsync": [Function],
        "promise": [Function],
        "refine": [Function],
        "refinement": [Function],
        "safeParse": [Function],
        "safeParseAsync": [Function],
        "spa": [Function],
        "superRefine": [Function],
        "transform": [Function],
        "trim": [Function],
      },
      "typeName": "ZodOptional",
    },
    "and": [Function],
    "array": [Function],
    "default": [Function],
    "describe": [Function],
    "isNullable": [Function],
    "isOptional": [Function],
    "nullable": [Function],
    "nullish": [Function],
    "optional": [Function],
    "or": [Function],
    "parse": [Function],
    "parseAsync": [Function],
    "promise": [Function],
    "refine": [Function],
    "refinement": [Function],
    "safeParse": [Function],
    "safeParseAsync": [Function],
    "spa": [Function],
    "superRefine": [Function],
    "transform": [Function],
  },
}
`;
